name: system tests

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     backend: [sqlite, MySQL]

    steps:
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: check out
      uses: actions/checkout@v2

    - name: build
      run:  script/test-build

    - name: clone orchestrator-ci-env
      run: |
        # Only clone if not already running locally at latest commit
        remote_commit=$(git ls-remote https://github.com/openark/orchestrator-ci-env.git HEAD | cut -f1)
        local_commit="unknown"
        [ -d "orchestrator-ci-env" ] && local_commit=$(cd orchestrator-ci-env && git log --format="%H" -n 1)

        echo "remote commit is: $remote_commit"
        echo "local commit is:  $local_commit"

        if [ "$remote_commit" != "$local_commit" ] ; then
          rm -rf ./orchestrator-ci-env
          git clone https://github.com/openark/orchestrator-ci-env.git
        fi

    - name: deploy consul as service
      run: |
        gunzip < orchestrator-ci-env/bin/linux/consul.gz > /usr/local/bin/consul
        sudo cp tests/system/etc/systemd/consul.service /etc/systemd/system/

    - name: deploy orchestrator as service
      run: |
        sudo cp etc/systemd/orchestrator.service /etc/systemd/system/
        sudo mkdir -p /usr/local/orchestrator
        sudo cp bin/orchestrator /usr/local/orchestrator/
        sudo cp resources/bin/orchestrator-client /usr/bin
        sudo cp tests/system/orchestrator-ci-system.conf.json /etc/orchestrator.conf.json

    - name: reload systemctl
      run: |
        sudo systemctl daemon-reload

    - name: run services
      run: |
        sudo systemctl start consul
        sudo systemctl start orchestrator

    - name: check services
      run: |
        sudo systemctl status consul
        sudo systemctl status orchestrator

    - name: orchestrator-client status
      run: |
        orchestrator-client -c api -path status | jq .
